# This is a basic workflow that is manually triggered

name: Install and Test 3rd Party Package Installers

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  Linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Setup and Test Homebrew
      run: |
        sudo apt-get purge build-essential
        sudo apt-get update
        sudo apt-get upgrade
        sudo apt-get install --reinstall r-base-dev
        sudo apt-get install --reinstall build-essential
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" -y
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bash_profile
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install gcc
        brew update
        brew outdated
        brew upgrade
        brew list
        brew install gh
  MacOS:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Setup and Test Homebrew
      shell: bash
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" -y
        brew update
        brew outdated
        brew upgrade
        brew list
        brew install gh
  Windows:
    runs-on: windows-latest
    steps:
    - name: Setup and Test Chocolatey
      shell: pwsh
      run: |
        Get-ExecutionPolicy
        Set-ExecutionPolicy Bypass -Scope Process
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        choco upgrade chocolatey
        choco
        RefreshEnv
        choco install gh --install-arguments="'/l*v c:\gh_msi_install.log
        RefreshEnv
